name: Main branch updated

on:
  push:
    branches:
      - main

jobs:
  format_and_lint:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[ci skip]') == false
    steps:
      - name: Init crate workflow
        uses: ./.github/actions/init_crate_workflow
          
      - name: Formatting
        run: |
          rustup component add rustfmt
          cargo fmt -- --check

      - name: Lints
        run: |
          rustup component add clippy
          cargo clippy -- -D warnings

  docs:
    needs: format_and_lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[ci skip]') == false
    steps:
      - name: Init crate workflow
        uses: ./.github/actions/init_crate_workflow
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Documentation
        run: |
          cargo doc --no-deps

  deploy:
    needs: docs
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/release-') && contains(github.event.head_commit.message, '[ci skip]') == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for version change
        id: version
        run: |
          VERSION=$(awk -F' = ' '/^version/ {print $2}' Cargo.toml | tr -d '"')
          OLD_VERSION=$(git show HEAD~1:Cargo.toml | awk -F' = ' '/^version/ {print $2}' | tr -d '"')

          if [ "$VERSION" != "$OLD_VERSION" ]
          then
            echo "::set-output name=bump::true"
          else
            echo "::set-output name=bump::false"
          fi

      - name: Cargo-release
        run: |
          cargo install cargo-release
          cargo release --dry-run
        if: steps.version.outputs.bump == 'true'
